///<summary>
///Класс который расширяет игровую логику для полного функционирования её в сетевом режиме
///</summary>
public class MultiplayerLogic //Данный класс реализует некоторые методы, необходимые для расширения игровой логики для сетевой игры
{
  ///<summary>
  ///Переменная определяющая логику игрового процесса
  ///</summary>
  private GameLogic logicForGame;
  ///<summary>
  ///Переменная отвечающая за сервер
  ///</summary>
  private Server server;
  ///<summary>
  ///Статус первого игрока
  ///</summary>
  private bool statusPlayerOne;
  ///<summary>
  ///Статус второго игрока
  ///</summary>
  private bool statusPlayerTwo;
  ///<summary>
  ///Массив очков для подсчёта количества очков игроков
  ///</summary>
  private long[] countPointsPlayer;
  ///<summary>
  ///Аккаунт первого игрока
  ///</summary>
  private Account player1;
  ///<summary>
  ///Аккаунт второго игрока
  ///</summary>
  private Account player2;
  ///<summary>
  ///Конструктор класса для запуска игрового процесса сетевой игры.<br/>
  ///Определяет игровую логику, выполняет синхронизации.
  ///</summary>
  public MultiplayerLogic(){
    //Запуск игровой логики для сетевой игры
  }
  ///<summary>
  ///Методы, которые необходимы для получения доступа к игровой логике.<br/>
  ///Данные методы применяются для двух игроков.
  ///</summary>
  /*методы которые вызывают методы класса GameLogic*/

  ///<summary>
  ///Метод проверки статуса подключения игроков
  ///</summary>
  public void checkStatusPlayers(){
    /*метод проверяет состояние подключения двух игроков
    и в случае если один отключается - проводит синхронизацию,
    вызывая ожидание у второго игрока*/
  }
  ///<summary>
  ///Метод для обмена количеством очков у игроков.<br/>
  ///Данный метод позволяет обоим пользователям иметь доступ<br/>
  ///к просмотру очков соперника.
  ///</summary>
  public void tradePointsInfo(){
    //обмен информацией о количестве очков у обоих игроков
  }
  ///<summary>
  ///Другие методы, которые необходимы для корректной работы
  ///</summary>
  //Другие методы класса
}
